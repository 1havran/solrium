% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/update.R
\name{update}
\alias{update}
\title{Update documents from R objects}
\usage{
update(x, commit = TRUE, wt = "json", raw = FALSE,
  base = "http://localhost:8983", ...)
}
\arguments{
\item{x}{Input, only data.frame supported right now}

\item{commit}{(logical) If \code{TRUE}, documents immediately searchable.
Deafult: \code{TRUE}}

\item{wt}{(character) One of json (default) or xml. If json, uses
\code{\link[jsonlite]{fromJSON}} to parse. If xml, uses \code{\link[XML]{xmlParse}} to
parse}

\item{raw}{(logical) If \code{TRUE}, returns raw data in format specified by
\code{wt} param}

\item{base}{(character) URL endpoint. This is different from the other functions in
that we aren't hitting a search endpoint. Pass in here}

\item{...}{curl options passed on to \code{\link[httr]{GET}}}
}
\description{
Update documents from R objects
}
\details{
You likely may not be able to run this function against many public Solr
services, but should work locally.
}
\examples{
\dontrun{
row.names(mtcars) <- NULL
mtcars <- data.frame(id = 1:NROW(mtcars), mtcars)
update(mtcars)

file <- system.file("examples", "books.csv", package = "solr")
x <- read.csv(file)
update(x)
}
}
\seealso{
Other update: \code{\link{update_csv}};
  \code{\link{update_json}}; \code{\link{update_xml}}
}

